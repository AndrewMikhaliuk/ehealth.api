{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "phone": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MOBILE",
            "LANDLINE"
          ]
        },
        "number": {
          "type": "string",
          "pattern": "^\\+38[0-9]{10}$"
        }
      },
      "required": [
        "type",
        "number"
      ],
      "additionalProperties": false
    },
    "name": {
      "type": "string",
      "pattern": "^(?!.*[ЫЪЭЁыъэё@%&$^#])[a-zA-ZА-ЯҐЇІЄа-яґїіє0-9№\\\"!\\^\\*)\\]\\[(._-].*$"
    },
    "address": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Dictionary: ADDRESS_TYPE"
        },
        "country": {
          "type": "string"
        },
        "area": {
          "$ref": "#/definitions/name"
        },
        "region": {
          "$ref": "#/definitions/name"
        },
        "settlement": {
          "$ref": "#/definitions/name"
        },
        "settlement_type": {
          "type": "string"
        },
        "settlement_id": {
          "type": "string"
        },
        "street_type": {
          "type": "string"
        },
        "street": {
          "$ref": "#/definitions/name"
        },
        "building": {
          "type": "string",
          "pattern": "^[1-9]([0-9]{1,2})?(([ \\-]{1})?(?![ЫЪЭЁыъэё])[А-ЯҐЇЄа-яґїє]{1})?((\\s)?(\\\\|\/)(\\s)?[1-9]([0-9]{1,2})?(([ \\-]{1})?(?![ЫЪЭЁыъэё])[А-ЯҐЇЄа-яґїє]{1})?)?$"
        },
        "apartment": {
          "type": "string"
        },
        "zip": {
          "type": "string",
          "pattern": "^[0-9]{5}$"
        }
      },
      "required": [
        "type",
        "country",
        "area",
        "settlement",
        "settlement_type",
        "settlement_id",
        "building"
      ],
      "additionalProperties": false
    },
    "document": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PASSPORT",
            "NATIONAL_ID",
            "BIRTH_CERTIFICATE",
            "TEMPORARY_CERTIFICATE"
          ]
        },
        "number": {
          "type": "string"
        },
        "identifies": {
          "type": "string",
          "enum": [
            "PERSON",
            "RELATIONSHIP"
          ]
        }
      },
      "required": [
        "type",
        "identifies",
        "number"
      ],
      "additionalProperties": false
    },
    "authentication_method": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OTP",
            "OTP_TRUSTEE",
            "OFFLINE"
          ]
        },
        "phone_number": {
          "type": "string",
          "pattern": "^\\+38[0-9]{10}$"
        }
      },
      "required": [
        "type",
        "phone_number"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "properties": {
    "declaration_request": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "Should be defined on the client side."
        },
        "person": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "second_name": {
              "type": "string"
            },
            "birth_date": {
              "type": "string",
              "format": "date"
            },
            "birth_place": {
              "type": "string"
            },
            "gender": {
              "type": "string",
              "enum": [
                "MALE",
                "FEMALE"
              ]
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "tax_id": {
              "type": "string",
              "pattern": "^[1-9]([0-9]{7}|[0-9]{9})$"
            },
            "secret": {
              "type": "string"
            },
            "documents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/document"
              }
            },
            "addresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/address"
              }
            },
            "phones": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/phone"
              }
            },
            "authentication_methods": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/authentication_method"
              }
            },
            "emergency_contact": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "second_name": {
                  "type": "string"
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/phone"
                  }
                }
              },
              "required": [
                "first_name",
                "last_name",
                "phones"
              ]
            },
            "confidant_person": {
              "type": "array",
              "items": {
              "properties": {
                "relation_type": {
                  "type": "string",
                  "enum": [
                    "PRIMARY",
                    "SECONDARY"
                  ]
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "second_name": {
                  "type": "string"
                },
                "birth_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "birth_place": {
                  "type": "string"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "MALE",
                    "FEMALE"
                  ]
                },
                "tax_id": {
                  "type": "string",
                  "pattern": "^[1-9]([0-9]{7}|[0-9]{9})$"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/document"
                  }
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/phone"
                  }
                }
              }
              },
              "required": [
                "first_name",
                "last_name",
                "birth_date",
                "birth_place",
                "gender"
              ],
              "description": "Should be set if this Person is disabled, underage, etc."
            },
            "renewal_consent": {
              "type": "boolean"
            },
            "patient_signed": {
              "type": "boolean"
            },
            "disclosure_consent": {
              "type": "boolean"
            },
            "process_data_consent": {
              "type": "boolean"
            }
          },
          "required": [
            "first_name",
            "last_name",
            "birth_date",
            "birth_country",
            "birth_settlement",
            "gender",
            "secret"
          ],
          "description": "Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc."
        },
        "employee_id": {
          "type": "string",
          "description": "Employee ID with `type=DOCTOR` selected from available Employees as a third contract party."
        },
        "division_id": {
          "type": "string",
          "description": "Registered Medical Service Provider Division identifier."
        },
        "scope": {
          "type": "string",
          "enum": [
            "FAMILY DOCTOR"
          ]
        }
      },
      "required": [
        "person",
        "employee_id",
        "division_id",
        "scope"
      ],
      "additionalProperties": false
    }
  }
}
